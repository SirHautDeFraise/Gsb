<?php

use PHPUnit\Framework\TestCase; 
/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-10-10 at 22:10:25.
 */
class PdoGsbTest extends TestCase {

  /**
   * @var PdoGsb
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(): void {
    $this->object = new PdoGsbTest;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(): void {
    
  }

  /**
   * @covers PdoGsb::__destruct
   * @todo   Implement test__destruct().
   */
  public function test__destruct() {
    // Remove the following lines when you implement this test.
    $this->assertEquals(1, 0);
  }

  /**
   * @covers PdoGsb::getPdoGsb
   * @todo   Implement testGetPdoGsb().
   */
  public function testGetPdoGsb() {
    // Remove the following lines when you implement this test.
    $this->assertTrue($this->object->getPdoGsb());
  }

  /**
   * @covers PdoGsb::getInfosVisiteur
   * @todo   Implement testGetInfosVisiteur().
   */
  public function testGetInfosVisiteur() {
    $this->assertSame(
            ['id' => 'a131', 'nom' => 'Villelachane', 'prenom' => 'Louis'],
            $this->object->getInfosVisiteur('lvillachane', 'jux7g')
    );
  }

  /**
   * @covers PdoGsb::getLesFraisHorsForfait
   * @todo   Implement testGetLesFraisHorsForfait().
   */
  public function testGetLesFraisHorsForfait() {
    $tab = $this->object->getLesFraisHorsForfait('a131', '201609');
    $this->assertSame(
            ['id' => '1', 'idvisiteur' => 'a131', 'mois' => '201609', 'libelle' => 'Location salle conférence', 'date' => '2016-09-11', 'montant' => '292.00'],
            $tab[0]
    );
  }

  /**
   * @covers PdoGsb::getNbjustificatifs
   * @todo   Implement testGetNbjustificatifs().
   */
  public function testGetNbjustificatifs() {
    $this->assertEquals(1, $this->object->getNbjustificatifs('a131', '201609'));
  }

  /**
   * @covers PdoGsb::getLesFraisForfait
   * @todo   Implement testGetLesFraisForfait().
   */
  public function testGetLesFraisForfait() {
    $tab = $this->object->getLesFraisHorsForfait('a131', '201609');
    $this->assertSame(['idvisiteur' => 'a131', 'mois' => '201609', 'idfraisforfait' => 'ETP', 'quantité' => '5'], $tab[0]);
  }

  /**
   * @covers PdoGsb::getLesIdFrais
   * @todo   Implement testGetLesIdFrais().
   */
  public function testGetLesIdFrais() {
    $tab = ['ETP', 'KM', 'NUI', 'REP'];
    $this->assertSame($tab, $this->object->getLesIdFrais());
  }

  /**
   * @covers PdoGsb::majFraisForfait
   * @todo   Implement testMajFraisForfait().
   */
  public function testMajFraisForfait() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::majNbJustificatifs
   * @todo   Implement testMajNbJustificatifs().
   */
  public function testMajNbJustificatifs() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::estPremierFraisMois
   * @todo   Implement testEstPremierFraisMois().
   */
  public function testEstPremierFraisMois() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::dernierMoisSaisi
   * @todo   Implement testDernierMoisSaisi().
   */
  public function testDernierMoisSaisi() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::creeNouvellesLignesFrais
   * @todo   Implement testCreeNouvellesLignesFrais().
   */
  public function testCreeNouvellesLignesFrais() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::creeNouveauFraisHorsForfait
   * @todo   Implement testCreeNouveauFraisHorsForfait().
   */
  public function testCreeNouveauFraisHorsForfait() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::supprimerFraisHorsForfait
   * @todo   Implement testSupprimerFraisHorsForfait().
   */
  public function testSupprimerFraisHorsForfait() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::getLesMoisDisponibles
   * @todo   Implement testGetLesMoisDisponibles().
   */
  public function testGetLesMoisDisponibles() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::getLesInfosFicheFrais
   * @todo   Implement testGetLesInfosFicheFrais().
   */
  public function testGetLesInfosFicheFrais() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers PdoGsb::majEtatFicheFrais
   * @todo   Implement testMajEtatFicheFrais().
   */
  public function testMajEtatFicheFrais() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

}